# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
parameters:
    locale: 'en'
    secret: '%env(APP_SECRET)%'
    app_title: '%env(APP_TITLE)%'
    app_locale: '%env(APP_LOCALE)%'
    app_logo_url: '%env(APP_LOGO_URL)%'
    app_monthly_overview_url: '%env(APP_MONTHLY_OVERVIEW_URL)%'
    app_header_url: '%env(APP_HEADER_URL)%'
    app_show_billable_field_in_export: '%env(bool:APP_SHOW_BILLABLE_FIELD_IN_EXPORT)%'
    service_users: '%env(SERVICE_USERS)%'
    # LDAP configuration parameters
    ldap_host: '%env(LDAP_HOST)%'
    ldap_port: '%env(int:LDAP_PORT)%'
    ldap_readuser: '%env(LDAP_READUSER)%'
    ldap_readpass: '%env(LDAP_READPASS)%'
    ldap_basedn: '%env(LDAP_BASEDN)%'
    ldap_usernamefield: '%env(LDAP_USERNAMEFIELD)%'
    ldap_usessl: '%env(bool:LDAP_USESSL)%'
    ldap_create_user: '%env(bool:LDAP_CREATE_USER)%'

services:
    # Default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        public: false       # Allows optimizing the container by removing unused services
        bind:
            $projectDir: '%kernel.project_dir%'

    # Makes classes in src/ available to be used as services
    # This creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/{DependencyInjection,Entity,Migrations,Tests,Kernel.php}'

    # Controllers are tagged automatically
    App\Controller\:
        resource: '../src/Controller/'
        tags: ['controller.service_arguments']

    # Add this if you use repositories
    App\Repository\:
        resource: '../src/Repository/'
        tags: ['doctrine.repository_service']

    # Add more service definitions when explicit configuration is needed
    # Please note that last definitions always *replace* previous ones

    # Use Contracts TranslatorInterface to avoid deprecation of Framework one
    Symfony\Contracts\Translation\TranslatorInterface: '@translator'
    Symfony\Component\HttpFoundation\Session\SessionInterface: '@session'

    # Logger alias for PSR-3
    Psr\Log\LoggerInterface: '@logger'

    # Ensure a concrete 'session' service exists for prod/dev; overridden in test env below
    session:
        class: Symfony\Component\HttpFoundation\Session\Session
        factory: ['@session.factory', 'createSession']
        public: true

    # Remove legacy annotations reader; using attributes mapping everywhere

    # Export service (modern service id)
    App\Service\ExportService:
        public: true
        autowire: true

    # Jira API factory for easier mocking in tests
    App\Service\Integration\Jira\JiraOAuthApiFactory:
        public: true
        autowire: true

    # New Localization service (to replace Helper usage gradually)
    App\Service\Util\LocalizationService:
        public: true
        autowire: true

    # LDAP client service (wrapper around legacy helper for DI)
    App\Service\Ldap\LdapClientService:
        public: true
        autowire: true
        bind:
            $projectDir: '%kernel.project_dir%'

    # Access denied subscriber to keep legacy 403 message
    App\EventSubscriber\AccessDeniedSubscriber:
        tags:
            - { name: kernel.event_subscriber }

    # Add this: Configure ClockInterface and SystemClock
    App\Service\ClockInterface:
        alias: App\Service\SystemClock

    # Query Cache Service configuration
    App\Service\Cache\QueryCacheService:
        arguments:
            $cache: '@cache.app'
            $logger: '@?logger'
        tags:
            - { name: monolog.logger, channel: cache }

    # Optimized Entry Repository configuration
    App\Repository\OptimizedEntryRepository:
        arguments:
            $managerRegistry: '@doctrine'
            $clock: '@App\Service\ClockInterface'
            $timeCalculationService: '@App\Service\Util\TimeCalculationService'
            $cache: '@?cache.app'
        tags:
            - { name: 'doctrine.repository_service' }

    # Use optimized version as the default EntryRepository
    App\Repository\EntryRepository:
        alias: App\Repository\OptimizedEntryRepository
        public: false

    # Token Encryption Service
    App\Service\Security\TokenEncryptionService:
        arguments:
            $parameterBag: '@parameter_bag'

    # Response Factory Service
    App\Service\Response\ResponseFactory:
        arguments:
            $translator: '@translator'

    # JIRA Integration Service
    App\Service\Integration\Jira\JiraIntegrationService:
        arguments:
            $managerRegistry: '@doctrine'
            $jiraApiFactory: '@App\Service\Integration\Jira\JiraOAuthApiFactory'
            $workLogService: '@App\Service\Integration\Jira\JiraWorkLogService'
            $logger: '@?logger'
        tags:
            - { name: monolog.logger, channel: jira }

    # Modern LDAP Service
    App\Service\Ldap\ModernLdapService:
        arguments:
            $params: '@parameter_bag'
            $logger: '@?logger'
        tags:
            - { name: monolog.logger, channel: ldap }

