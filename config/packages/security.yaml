security:
    # https://symfony.com/doc/current/security.html#registering-the-user-hashing-passwords
    encoders:
        App\Entity\User: plaintext

    # https://symfony.com/doc/current/security.html#loading-the-user-the-user-provider
    providers:
        app_user_provider:
            entity:
                class: App\Entity\User
                property: username

    role_hierarchy:
        ROLE_ADMIN: ROLE_USER
        ROLE_SUPER_ADMIN: [ROLE_USER, ROLE_ADMIN, ROLE_ALLOWED_TO_SWITCH]

    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false

        main:
            anonymous: true
            provider: app_user_provider

            # Custom authenticator for LDAP login
            guard:
                authenticators:
                    - App\Security\LdapAuthenticator
                entry_point: App\Security\LdapAuthenticator

            # Standard logout configuration
            logout:
                path: _logout
                target: _login
                # Add any other logout handlers if needed
                # handlers:
                #    - App\Security\LogoutHandler

            # Remember me functionality (optional)
            remember_me:
                secret: '%kernel.secret%'
                lifetime: 2592000 # 30 days in seconds

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/login, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/logout, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/start, roles: ROLE_USER }
        - { path: ^/admin, roles: ROLE_ADMIN }
        - { path: ^/, roles: ROLE_USER }

        # Uncomment to restrict access to paths starting with /_internal to only localhost
        # - { path: ^/_internal/secure, roles: IS_AUTHENTICATED_ANONYMOUSLY, ip: 127.0.0.1 }
        # - { path: ^/_internal/secure, roles: ROLE_NO_ACCESS }
