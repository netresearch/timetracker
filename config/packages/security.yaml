security:
    # https://symfony.com/doc/current/security.html#registering-the-user-hashing-passwords
    encoders:
        App\Entity\User: plaintext

    # https://symfony.com/doc/current/security.html#loading-the-user-the-user-provider
    providers:
        app_user_provider:
            entity:
                class: App\Entity\User
                property: username

    role_hierarchy:
        ROLE_ADMIN: ROLE_USER
        ROLE_SUPER_ADMIN: [ROLE_USER, ROLE_ADMIN, ROLE_ALLOWED_TO_SWITCH]

    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false

        main:
            anonymous: true
            provider: app_user_provider

            # Add form_login configuration
            form_login:
                login_path: _login
                check_path: login_check
                default_target_path: /
                username_parameter: _username
                password_parameter: _password
                csrf_token_generator: security.csrf.token_manager
                # Specify the login form template
                failure_path_parameter: _failure_path
                # Use a post_only parameter to secure the login form
                post_only: true

            # Custom authenticator for LDAP login
            guard:
                authenticators:
                    - App\Security\LdapAuthenticator
                entry_point: App\Security\LdapAuthenticator

            # Standard logout configuration
            logout:
                path: _logout
                target: _login
                # Ensure any custom session data is cleared on logout
                invalidate_session: true

            # Remember me functionality (uses Symfony's built-in feature)
            remember_me:
                secret: '%kernel.secret%'
                lifetime: 2592000 # 30 days in seconds
                path: /
                secure: false  # Set to true in production with HTTPS

            # Enable user switching (impersonation)
            switch_user:
                parameter: simulateUserId
                role: ROLE_ALLOWED_TO_SWITCH

    # Access control settings
    access_control:
        - { path: ^/login, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/login_check, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/css, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/js, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/images, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/status/check, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/admin, roles: ROLE_ADMIN }
        - { path: ^/, roles: IS_AUTHENTICATED_REMEMBERED }

        # Uncomment to restrict access to paths starting with /_internal to only localhost
        # - { path: ^/_internal/secure, roles: IS_AUTHENTICATED_ANONYMOUSLY, ip: 127.0.0.1 }
        # - { path: ^/_internal/secure, roles: ROLE_NO_ACCESS }
