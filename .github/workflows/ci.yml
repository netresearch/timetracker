name: CI

on:
  push:
    branches: ["main", "v4"]
  pull_request:
    branches: ["**"]

jobs:
  qa-and-tests:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Show Docker version
        run: |
          docker --version
          docker compose version

      - name: Prepare config files and SQL
        run: |
          # Ensure PHPStan config exists
          if [ ! -f phpstan.neon ] && [ -f phpstan.dist.neon ]; then cp phpstan.dist.neon phpstan.neon; fi
          # Ensure PHPUnit config exists
          if [ ! -f phpunit.xml ] && [ -f phpunit.xml.dist ]; then cp phpunit.xml.dist phpunit.xml; fi
          # Generate unittest SQL file (matches local development)
          sed '1s/^/USE unittest;\n/' sql/full.sql > sql/unittest/001_testtables.sql

      - name: Set up development environment
        env:
          COMPOSE_PROFILES: dev
        run: |
          # Use profile-based setup matching local development
          make install

      - name: Static analysis (PHPStan)
        env:
          COMPOSE_PROFILES: tools
        run: |
          make stan

      - name: Architecture analysis (PHPat)
        env:
          COMPOSE_PROFILES: tools
        run: |
          make phpat

      - name: Code style (Laravel Pint)
        env:
          COMPOSE_PROFILES: tools
        run: |
          make cs-check

      - name: Lint Twig templates
        env:
          COMPOSE_PROFILES: tools
        run: |
          make twig-lint

      - name: Run tests (PHPUnit)
        env:
          COMPOSE_PROFILES: dev
        run: |
          make test


